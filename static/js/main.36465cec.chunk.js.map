{"version":3,"sources":["Jogo.js","Mensagem.js","Botoes.js","Cartao.js","GraficoLinha.js","index.js"],"names":["Jogo","props","valorInicial","valorFinal","timerGeral","timerSegundoASegundo","operacoes","simbolo","operacao","a","b","gerarConta","n1","Math","floor","random","n2","oQueFazer","length","resultado","gerarAlternativas","aux","n","includes","push","_","shuffle","gerarJogo","alternativas","setState","tempoRestante","encerrar","clearInterval","iniciarRodada","func","temp","state","intervaloDeAtualizacao","setInterval","Array","fill","undefined","this","status","conta","className","styles","map","e","i","valor","toString","alternativa","indice","label","onClick","fAtualizarPontuacao","Component","defaultProps","Mensagem","texto","Botoes","botoes","icon","fIniciar","fEncerrar","fZerar","Cartao","title","titulo","style","card","inner","children","backgroundColor","GraficoLinha","colecoes","acertos","dados","cor","erros","contador","atualizarDados","zerar","tension","options","animation","duration","scales","y","ticks","stepSize","type","data","labels","datasets","borderColor","PureComponent","App","alterarStatus","atualizarPontuacao","acertou","zerarPontucao","ReactDOM","render","document","querySelector"],"mappings":"mRAIqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAONC,aAAe,EARA,EASfC,WAAa,GATE,EAWfC,WAAa,KAXE,EAYfC,qBAAuB,KAZR,EAcfC,UAAY,CACR,CACIC,QAAS,IAAKC,SAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAE1C,CACIH,QAAS,IAAKC,SAAU,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAnB/B,EAuBfC,WAAa,WACT,IAAIC,EAAKC,KAAKC,MAAMD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACxDc,EAAKH,KAAKC,MAAMD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACxDe,EAAYJ,KAAKC,MAAMD,KAAKE,SAAW,EAAKT,UAAUY,QAG1D,MAAO,CAAEN,KAAII,KAAIT,QAFH,EAAKD,UAAUW,GAAf,QAEYE,UADV,EAAKb,UAAUW,GAAf,SAAsCL,EAAII,KA5B/C,EAgCfI,kBAAoB,SAACD,GAEjB,IADA,IAAIE,EAAM,CAACF,GACHE,EAAIH,OAAS,GAAI,CACrB,IAAII,EAAIT,KAAKC,MAAMD,KAAKE,SAAW,EAAKZ,YAAc,EAAKD,aACrDmB,EAAIE,SAASD,IAAKD,EAAIG,KAAKF,GAErC,OAAOG,IAAEC,QAAQL,IAtCN,EAyCfM,UAAY,WACR,MAAqC,EAAKhB,aAApCC,EAAN,EAAMA,GAAII,EAAV,EAAUA,GAAIT,EAAd,EAAcA,QAASY,EAAvB,EAAuBA,UACnBS,EAAe,EAAKR,kBAAkBD,GAC1C,EAAKU,SAAS,CACVjB,KAAII,KAAIG,YAAWZ,UAASqB,eAAcE,cAAe,KA7ClD,EAiDfC,SAAW,WACPC,cAAc,EAAK5B,YACnB4B,cAAc,EAAK3B,uBAnDR,EAgEf4B,cAAgB,WACZD,cAAc,EAAK5B,YACnB4B,cAAc,EAAK3B,sBACnB,IAAgB6B,EAAMC,EAOtB,EAAK/B,YAPW8B,EAOW,EAAKP,UAPVQ,EAOqB,EAAKC,MAAMC,uBANlDH,IACA,EAAK7B,qBAAuBiC,aAAY,WACpC,EAAKT,SAAS,CAAEC,cAAe,EAAKM,MAAMN,cAAgB,MAC3D,KACIQ,YAAYJ,EAAMC,KAtEjC,EAAKC,MAAQ,CACTR,aAAcW,MAAM,GAAGC,UAAKC,GAC5BJ,uBAAwB,IACxBP,cAAe,GALJ,E,qDAsDf,WAC+B,OAAtBY,KAAKzC,MAAM0C,QACZD,KAAKT,kB,kCAIb,WACIS,KAAKX,a,oBAiBb,WAAU,IAAD,OACCa,EACF,qBAAKC,UAAWC,EAAOF,MAAvB,SAGQ,CAACF,KAAKN,MAAMxB,GAAI8B,KAAKN,MAAM7B,QAASmC,KAAKN,MAAMpB,GAAI,IAAK,OAAO+B,KAAK,SAACC,EAAGC,GAAJ,OAChE,qBAAwBJ,UAAWC,EAAOI,MAA1C,SACKF,GADKC,EAAEE,iBAQtBvB,EACF,qBAAKiB,UAAWC,EAAOlB,aAAvB,SAEQc,KAAKN,MAAMR,aAAamB,KAAI,SAACK,EAAaC,GAAd,OACxB,cAAC,IAAD,CAEIC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAaD,WACpBN,UAAS,UAAKC,EAAOI,MAAZ,YAAqBJ,EAAOM,aACrCG,QAAS,WACL,EAAKtB,gBACL,EAAKhC,MAAMuD,oBACP,EAAKpB,MAAMjB,YAAciC,KAN5BC,EAAOF,iBAe1BrB,EACF,qBAAKe,UAAWC,EAAOhB,cAAvB,SACKY,KAAKN,MAAMN,gBAIpB,OACI,gCACKc,EACAhB,EACAE,S,GA3HiB2B,aAiI5BX,EAAS,CACXM,YAAa,oBACbxB,aAAc,mFACdgB,MAAO,4FACPM,MAAO,gGACPpB,cAAe,kEAGnB9B,EAAK0D,aAAe,G,IC3ICC,E,4JACjB,WACI,OACI,qBAAKd,UAAS,UAAKC,EAAOc,MAAZ,YAAqBlB,KAAKzC,MAAM4C,WAA9C,SACKH,KAAKzC,MAAM2D,Y,GAJUH,aAUhCX,EAAS,CACXc,MAAO,0FCVUC,E,4JACjB,WACI,OACI,qBAAKhB,UAAS,UAAKH,KAAKzC,MAAM4C,UAAhB,YAA6BC,EAAOgB,QAAlD,SACI,sBAAKjB,UAAU,8BAAf,UACI,cAAC,IAAD,CACIS,MAAM,eACNT,UAAU,kDACVkB,KAAK,cACLR,QAASb,KAAKzC,MAAM+D,WAExB,cAAC,IAAD,CACIV,MAAM,gBACNT,UAAU,oDACVkB,KAAK,cACLR,QAASb,KAAKzC,MAAMgE,YAExB,cAAC,IAAD,CACIX,MAAM,wBACNT,UAAU,qDACVkB,KAAK,cACLR,QAASb,KAAKzC,MAAMiE,kB,GArBRT,aA6B9BX,EAAS,CACXgB,OAAQ,I,QC9BSK,E,4JACjB,WACI,OACI,cAAC,IAAD,CAAMC,MAAO1B,KAAKzC,MAAMoE,OAAQC,MAAOxB,EAAOyB,KAA9C,SACI,qBAAK1B,UAAS,UAAKC,EAAO0B,MAAZ,YAAqB9B,KAAKzC,MAAM4C,WAA9C,SACKH,KAAKzC,MAAMwE,iB,GALIhB,aAY9BX,EAAS,CACXyB,KAAM,CAACG,gBAAiB,oBACxBF,MAAO,6CAGXL,EAAOT,aAAe,CAClBW,OAAQ,gC,oBClBSM,E,kDACjB,WAAY1E,GAAQ,IAAD,8BACf,cAAMA,IAOV2E,SAAW,CACPC,QAAS,CACLR,OAAQ,UACRS,MAAO,GACPC,IAAK,WAETC,MAAO,CACHX,OAAQ,QACRS,MAAO,GACPC,IAAK,YAjBM,EAqBnBE,SAAW,GArBQ,EAuBnBC,eAAiB,WACb,EAAKN,SAAW,CACZC,QAAS,CACLR,OAAQ,UACRS,MAAO,EAAK7E,MAAMkF,MAAQ,GAAnB,sBAA4B,EAAKP,SAASC,QAAQC,OAAlD,CAAyD,EAAK7E,MAAM4E,UAC3EE,IAAK,WAETC,MAAO,CACHX,OAAQ,QACRS,MAAO,EAAK7E,MAAMkF,MAAQ,GAAnB,sBAA4B,EAAKP,SAASI,MAAMF,OAAhD,CAAuD,EAAK7E,MAAM+E,QACzED,IAAK,YAGb,EAAKE,SAAW,EAAKhF,MAAMkF,MAAQ,GAAnB,sBAA4B,EAAKF,UAAjC,CAA2C,EAAKhF,MAAMgF,YAlCtE,EAAK7C,MAAQ,CACTgD,QAAS,GACT5C,MAAM,GAJK,E,0CAuCnB,WAGI,OAFAE,KAAKwC,iBAGD,cAAC,IAAD,CACIG,QAAS,CACLC,UAAW,CACPC,SAAU,GAEdC,OAAQ,CACJC,EAAG,CACCC,MAAO,CACHC,SAAU,MAK1BC,KAAK,OACLC,KAAM,CACFC,OAAQpD,KAAKuC,SACbc,SAAU,CACN,CACIzC,MAAOZ,KAAKkC,SAASC,QAAQR,OAC7BwB,KAAMnD,KAAKkC,SAASC,QAAQC,MAC5BkB,YAAatD,KAAKkC,SAASC,QAAQE,IACnCvC,KAAME,KAAKN,MAAMI,KACjB4C,QAAS1C,KAAKN,MAAMgD,SAExB,CACI9B,MAAOZ,KAAKkC,SAASI,MAAMX,OAC3BwB,KAAMnD,KAAKkC,SAASI,MAAMF,MAC1BkB,YAAatD,KAAKkC,SAASI,MAAMD,IACjCvC,KAAME,KAAKN,MAAMI,KACjB4C,QAAS1C,KAAKN,MAAMgD,iB,GAzENa,iBCUrBC,E,4MAEjB9D,MAAQ,CACJO,OAAQ,MACRkC,QAAS,EACTG,MAAO,EACPC,SAAU,G,EAGdkB,cAAgB,SAACxD,GACb,EAAKd,SAAS,CAAEc,Y,EAGpByD,mBAAqB,SAACC,GAClB,EAAKxE,SACDwE,EACA,CAAExB,QAAS,EAAKzC,MAAMyC,QAAU,GAEhC,CAAEG,MAAO,EAAK5C,MAAM4C,MAAQ,IAEhC,EAAKnD,SAAS,CAAEoD,SAAU,EAAK7C,MAAM6C,SAAW,K,EAGpDqB,cAAgB,WACZ,EAAKzE,SAAS,CACVgD,QAAS,EACTG,MAAO,EACPC,SAAU,K,4CAIlB,WAAU,IAAD,OACL,OACI,sBAAKpC,UAAU,8BAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,eAAC,EAAD,CAAQA,UAAU,UAAlB,UACI,qBAAKA,UAAU,UAAf,SAE8B,OAAtBH,KAAKN,MAAMO,OACX,cAAC,EAAD,CACIA,OAAQD,KAAKN,MAAMO,OACnBa,oBAAqBd,KAAK0D,qBAG9B,qBAAKvD,UAAU,wDAAf,SACI,cAAC,EAAD,CACIe,MAAM,sBACNf,UAAU,YAK1B,cAAC,EAAD,CACImB,SAAU,kBAAM,EAAKmC,cAAc,OACnClC,UAAW,kBAAM,EAAKkC,cAAc,QACpCjC,OAAQ,kBAAM,EAAKoC,iBACnBzD,UAAU,cAMtB,qBAAKA,UAAU,kBAAf,SACI,cAAC,EAAD,CAAQwB,OAAO,sBAAgBxB,UAAU,UAAzC,SACI,cAAC,EAAD,CACIgC,QAASnC,KAAKN,MAAMyC,QACpBG,MAAOtC,KAAKN,MAAM4C,MAClBC,SAAUvC,KAAKN,MAAM6C,SACrBE,MAA+B,IAAvBzC,KAAKN,MAAMyC,SAAsC,IAArBnC,KAAKN,MAAM4C,mB,GApE1CvB,aA6EjC8C,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.36465cec.chunk.js","sourcesContent":["import { Button } from 'primereact/button'\nimport React, { Component } from 'react'\nimport _ from 'underscore'\n\nexport default class Jogo extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            alternativas: Array(5).fill(undefined),\n            intervaloDeAtualizacao: 5000,\n            tempoRestante: 5\n        }\n    }\n        valorInicial = 1\n        valorFinal = 10\n\n        timerGeral = null\n        timerSegundoASegundo = null\n\n        operacoes = [\n            {\n                simbolo: '+', operacao: (a, b) => a + b,\n            },\n            {\n                simbolo: '-', operacao: (a, b) => a - b\n            }\n        ]\n\n        gerarConta = () => {\n            let n1 = Math.floor(Math.random() * this.valorFinal) + this.valorInicial\n            let n2 = Math.floor(Math.random() * this.valorFinal) + this.valorInicial\n            let oQueFazer = Math.floor(Math.random() * this.operacoes.length)\n            let simbolo = this.operacoes[oQueFazer]['simbolo']\n            let resultado = this.operacoes[oQueFazer]['operacao'](n1, n2)\n            return { n1, n2, simbolo, resultado }\n        }\n\n        gerarAlternativas = (resultado) => {\n            let aux = [resultado]\n            while ( aux.length < 5 ) {\n                let n = Math.floor(Math.random() * this.valorFinal) + this.valorInicial\n                if ( !aux.includes(n) ) aux.push(n)\n            }\n            return _.shuffle(aux)\n        }\n\n        gerarJogo = () => {\n            let { n1, n2, simbolo, resultado } = this.gerarConta()\n            let alternativas = this.gerarAlternativas(resultado)\n            this.setState({\n                n1, n2, resultado, simbolo, alternativas, tempoRestante: 5\n            })\n        }\n\n        encerrar = () => {\n            clearInterval(this.timerGeral)\n            clearInterval(this.timerSegundoASegundo)\n        }\n\n        componentDidMount() {\n            if ( this.props.status === 'on') {\n                this.iniciarRodada()\n            }\n        }\n\n        componentWillUnmount() {\n            this.encerrar()\n        }\n\n        iniciarRodada = () => {\n            clearInterval(this.timerGeral)\n            clearInterval(this.timerSegundoASegundo)\n            let executar = (func, temp) => {\n                func()\n                this.timerSegundoASegundo = setInterval(() => {\n                    this.setState({ tempoRestante: this.state.tempoRestante - 1 })\n                }, 1000)\n                return setInterval(func, temp)\n            }\n            this.timerGeral = executar(this.gerarJogo, this.state.intervaloDeAtualizacao)\n        }\n    \n\n    render() {\n        const conta = (\n            <div className={styles.conta}>\n                {\n                                                                            // Utilização de () -> return implícito\n                    [this.state.n1, this.state.simbolo, this.state.n2, '=', '...'].map( (e, i) => (\n                        <div key={i.toString()} className={styles.valor}>\n                            {e}\n                        </div>\n                    ))\n                }\n            </div>\n        )\n\n        const alternativas = (\n            <div className={styles.alternativas}>\n                {\n                    this.state.alternativas.map((alternativa, indice) => (\n                        <Button\n                            key={indice.toString()}\n                            label={alternativa?.toString()}\n                            className={`${styles.valor} ${styles.alternativa}`}\n                            onClick={() => {\n                                this.iniciarRodada()\n                                this.props.fAtualizarPontuacao(\n                                    this.state.resultado === alternativa\n                                )\n                            }}\n                        />\n                    ))\n                }\n            </div>\n        )\n\n        const tempoRestante = (\n            <div className={styles.tempoRestante}>\n                {this.state.tempoRestante}\n            </div>\n        )\n\n        return (\n            <div>\n                {conta}\n                {alternativas}\n                {tempoRestante}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    alternativa: 'p-button-outlined',\n    alternativas: 'flex justify-content-evenly align-items-center border-round shadow-2 h-4rem mt-2',\n    conta: 'flex justify-content-center align-items-center border-round bg-yellow-200 shadow-2 h-4rem',\n    valor: 'flex justify-content-center align-items-center border-round border-1 border-400 h-3rem w-3rem',\n    tempoRestante: 'flex justify-content-center align-items-center h-4rem text-3xl'\n}\n\nJogo.defaultProps = {\n    \n}","import React, { Component } from 'react'\n\nexport default class Mensagem extends Component {\n    render() {\n        return (\n            <div className={`${styles.texto} ${this.props.className}`}>\n                {this.props.texto}\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    texto: 'flex justify-content-center align-items-center border-round bg-red-100 shadow-2 h-4rem'\n}","import { Button } from 'primereact/button'\nimport React, { Component } from 'react'\n\nexport default class Botoes extends Component {\n    render() {\n        return (\n            <div className={`${this.props.className} ${styles.botoes}`}>\n                <div className=\"flex justify-content-evenly\">\n                    <Button \n                        label=\"Iniciar Jogo\"\n                        className=\"p-button-raised p-button-outlined p-button-info\"\n                        icon=\"pi pi-check\"\n                        onClick={this.props.fIniciar}\n                    />\n                    <Button \n                        label=\"Encerrar Jogo\"\n                        className=\"p-button-raised p-button-outlined p-button-danger\"\n                        icon=\"pi pi-times\"\n                        onClick={this.props.fEncerrar}\n                    />\n                    <Button \n                        label=\"Zerar Pontuação\"\n                        className=\"p-button-raised p-button-outlined p-button-warning\"\n                        icon=\"pi pi-times\"\n                        onClick={this.props.fZerar}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst styles = {\n    botoes: ''\n}","import React, { Component } from 'react'\nimport { Card } from 'primereact/card'\n\nexport default class Cartao extends Component {\n    render() {\n        return (\n            <Card title={this.props.titulo} style={styles.card}>\n                <div className={`${styles.inner} ${this.props.className}`}>\n                    {this.props.children}\n                </div>\n            </Card>\n        )\n    }\n}\n\nconst styles = {\n    card: {backgroundColor: 'var(--green-400)'},\n    inner: 'border-round bg-yellow-150 w-8 p-2 m-auto',\n}\n\nCartao.defaultProps = {\n    titulo: 'Resolva a Continha se puder!'\n}","import { Chart } from 'primereact/chart'\nimport React, { PureComponent } from 'react'\n\nexport default class GraficoLinha extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = {\n            tension: 0.4,\n            fill: false,\n        }\n    }\n    \n    colecoes = {\n        acertos: {\n            titulo: 'Acertos',\n            dados: [],\n            cor: '#2196F3'\n        }, \n        erros: {\n            titulo: 'Erros',\n            dados: [],\n            cor: '#F44336'\n        }\n    }\n\n    contador = []\n\n    atualizarDados = () => {\n        this.colecoes = {\n            acertos: {\n                titulo: 'Acertos',\n                dados: this.props.zerar ? [] : [...this.colecoes.acertos.dados, this.props.acertos],\n                cor: '#2196F3'\n            },\n            erros: {\n                titulo: 'Erros',\n                dados: this.props.zerar ? [] : [...this.colecoes.erros.dados, this.props.erros],\n                cor: '#F44336'\n            }\n        }\n        this.contador = this.props.zerar ? [] : [...this.contador, this.props.contador]\n    }\n\n    render() {\n        this.atualizarDados()\n\n        return (\n            <Chart \n                options={{\n                    animation: {\n                        duration: 0\n                    },\n                    scales: {\n                        y: {\n                            ticks: {\n                                stepSize: 1,\n                            }\n                        }\n                    }\n                }}\n                type=\"line\"\n                data={{\n                    labels: this.contador, \n                    datasets: [\n                        {\n                            label: this.colecoes.acertos.titulo,\n                            data: this.colecoes.acertos.dados,\n                            borderColor: this.colecoes.acertos.cor,\n                            fill: this.state.fill,\n                            tension: this.state.tension\n                        },\n                        {\n                            label: this.colecoes.erros.titulo,\n                            data: this.colecoes.erros.dados,\n                            borderColor: this.colecoes.erros.cor,\n                            fill: this.state.fill,\n                            tension: this.state.tension\n                        }\n                    ]\n                }}\n            />\n        )\n    }\n}\n","import 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\nimport 'primeflex/primeflex.css';\n\nimport React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport Jogo from './Jogo'\nimport Mensagem from './Mensagem'\nimport Botoes from './Botoes'\nimport Cartao from './Cartao'\nimport GraficoLinha from './GraficoLinha';\n\nexport default class App extends Component {\n\n    state = {\n        status: 'off',\n        acertos: 0,\n        erros: 0,\n        contador: 0\n    }\n\n    alterarStatus = (status) => {\n        this.setState({ status })\n    }\n\n    atualizarPontuacao = (acertou) => {\n        this.setState(\n            acertou ? \n            { acertos: this.state.acertos + 1 } \n            : \n            { erros: this.state.erros + 1 } \n        )\n        this.setState({ contador: this.state.contador + 1 })\n    }\n\n    zerarPontucao = () => {\n        this.setState({\n            acertos: 0,\n            erros: 0,\n            contador: 0\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"grid justify-content-center\">\n                <div className=\"col-12 lg:col-6\">\n                    <Cartao className=\"h-18rem\">\n                        <div className=\"h-12rem\">\n                            {\n                                this.state.status === 'on' ? \n                                <Jogo \n                                    status={this.state.status}\n                                    fAtualizarPontuacao={this.atualizarPontuacao}\n                                />\n                                :\n                                <div className=\"flex align-items-center justify-content-center h-full\">\n                                    <Mensagem \n                                        texto=\"Clique para Iniciar\"\n                                        className=\"w-6\"\n                                    />\n                                </div>\n                            }\n                        </div>\n                        <Botoes\n                            fIniciar={() => this.alterarStatus('on')}\n                            fEncerrar={() => this.alterarStatus('off')}\n                            fZerar={() => this.zerarPontucao()}\n                            className=\"mt-5\"\n                        />\n                        {/* {`Acertos: ${this.state.acertos}`}\n                        {`Erros: ${this.state.erros}`} */}\n                    </Cartao>\n                </div>\n                <div className=\"col-12 lg:col-6\">\n                    <Cartao titulo=\"Sua Pontuação\" className=\"h-18rem\">\n                        <GraficoLinha \n                            acertos={this.state.acertos}\n                            erros={this.state.erros}\n                            contador={this.state.contador}\n                            zerar={(this.state.acertos === 0 && this.state.erros === 0)}\n                        />\n                    </Cartao>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n)"],"sourceRoot":""}